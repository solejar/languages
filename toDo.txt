Decliner:
    Backlog in order:        

    Functional:

        Wrning for gender mismatch between noun and adj currently can only display in english, perhaps a flaw that can be fixed with an enhancement to the data schema
            also display this warning as a popup
            <div ng-show="!ending.sameGender(ending.adjGender,ending.nounGender)&&ending.display">
                        {{"Warning! Your adjective has a gender of " + ending.adjGender + " while your noun has a gender of " + ending.nounGender + ". Please change either to make them match."}}
                        </div> <-- leaving this here for now

        Submit Button:
            Try out for a couple of cases. Allow user to change plurality and case asynchronously

        Why doesn't case show up automatically???

        Gender warning:
            Only display gender warning after submit press

        Error Button:
            make it open a window where users can include manual comments and perhaps additional info

        Add remaining exceptions:
            Missing solo exceptions: (amongst others)
                господин
                болгарин
                татарин
                хозяин

        Edge Cases:
            Flesh out what to do if oper indicated is 'else'
                how do I know/indicate that the ruleSet returned is the default?

            Should I allow user to enter wrong gender mistakenly?
                For example enter male adj and female noun, then just conjugate the male adj into female before starting
                i'm thinking maybe

    Non-functional: 
        Styling (this is my priority right now)
            Mobile vs web sizing
            Add some fun colors
            Maybe box things off?

        Code improvement/refactoring:
            Group inputs into a single object, then re-integrate this into rest of app.
            Improve REST endpoints, parse inputs/path urls on start, abstract such logic out of the Mongo
  
        Server-side:
            pipe output to a file or db
            don't get all exceptions at first, just get exceptions with GET request when needed  

        Mongo:
            Look at adding schema validation

        Testing:
            Add 'example' field to facilitate easy testing  

        Buy a domain, some online mongo allocation as well

        Design Docs/How-to:
            Hmm this should come before release I suppose?  

    Potential ideas:
        word bank!
            Should I move to a model of every word entered going into the database? And then keeping the rules stored? Then we could keep track of frequency and other such things, and provide an asynchronous suggestion bank
        Total sentence constructor, with pronoun and verb placement

        App doesn't handle:

            words with multiple forms of plurals
            Non-declinable, non-russian names.

            Currently deciding if I can handle locative case for words like год

    Singular personal pronouns? Question pronouns? Determinative?
        work on this after the infrastructure is set up    


        

Looking at this later

Text Learner:
    Authentication:
        Need to attach everything to a user account
    Copy and paste text
        Hit button, will tokenize
        and display in paged format
    Data-schema:
        Word:   {
            'name': Str,
            'englishMeaning': Str (is this worth storing? or just come up asynchronously?),
            'howWellKnown': Int (starts from 1-5),
            'partOfSpeech': Str
        }